import React, { useRef, useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import './Languageswitcher.css';

const indianLanguages = [
  { code: 'EN', name: 'English', flag: 'üåê' },
  { code: 'HI', name: '‡§π‡§ø‡§Ç‡§¶‡•Ä', flag: 'üáÆüá≥' },
  { code: 'TA', name: '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç', flag: 'üáÆüá≥' },
  { code: 'TE', name: '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å', flag: 'üáÆüá≥' },
  { code: 'KN', name: '‡≤ï‡≤®‡≥ç‡≤®‡≤°', flag: 'üáÆüá≥' },
  { code: 'ML', name: '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç', flag: 'üáÆüá≥' },
  { code: 'MR', name: '‡§Æ‡§∞‡§æ‡§†‡•Ä', flag: 'üáÆüá≥' },
  { code: 'GU', name: '‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä', flag: 'üáÆüá≥' },
  { code: 'PA', name: '‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä', flag: 'üáÆüá≥' },
  { code: 'BN', name: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ', flag: 'üáÆüá≥' },
  { code: 'OR', name: '‡¨ì‡¨°‡¨º‡¨ø‡¨Ü', flag: 'üáÆüá≥' },
  { code: 'AS', name: '‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ', flag: 'üáÆüá≥' },
  { code: 'UR', name: 'ÿßÿ±ÿØŸà', flag: 'üáÆüá≥' },
];

const Languageswitcher = () => {
  const { i18n } = useTranslation();
  const [open, setOpen] = React.useState(false);
  const dropdownRef = useRef(null);

  useEffect(() => {
    function handleClickOutside(event) {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setOpen(false);
      }
    }
    if (open) {
      document.addEventListener('mousedown', handleClickOutside);
    }
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [open]);

  const changeLanguage = (lang) => {
    i18n.changeLanguage(lang.toLowerCase()); // lowercase for i18n
    localStorage.setItem('lang', lang.toLowerCase());
    setOpen(false);
  };

  return (
    <div className="language-switcher-dropdown" ref={dropdownRef}>
      <button className="lang-btn" onClick={() => setOpen(!open)}>
        <span className="globe-icon" role="img" aria-label="language">üåê</span>
        <span className="highlight-text">Select Language</span>
        <span className="arrow">{open ? '‚ñ≤' : '‚ñº'}</span>
      </button>
      {open && (
        <div className="lang-dropdown">
          {indianLanguages.map((lang) => (
            <div
              key={lang.code}
              className={`lang-option ${i18n.language === lang.code.toLowerCase() ? 'selected' : ''}`}
              onClick={() => changeLanguage(lang.code)}
            >
              <span className="lang-flag">{lang.flag}</span>
              <span className="lang-code">{lang.code}</span>
              <span className="lang-native">{lang.name}</span>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default Languageswitcher;
